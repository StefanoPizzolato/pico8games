pico-8 cartridge // http://www.pico-8.com
version 32
__lua__
player = {}
cam_x=-64
cam_y=-64
screen_w=128
screen_h=128
t=0
dbg="ciao"

function _init()
	--keep color change
	poke(0x5f2e,1)
	t=0
	cls()
	--p_ani={{0,false},{2,false},{0,false},{2,true}}
	--palette change
	pal(12,128,1)
	pal(13,138,1)
	--pal(14,133,1)
	pal(6,131,1)
	pal(7,10,1)--can be merged with below
	pal(10,133,1)
	pal(2,132,1)
	
	init_timers()
	
	actions = {}
	--
	actor = {}
	
	player = make_player(1,1)
	
 for y=0,127 do for x=0,127 do
  if (mget(x,y) == 32) then
   --make player
  end
 end
 end
end

function _update()
	t=t+1
	foreach(actor,move_actor)
	move_spawns(player.x,player.y)
	update_timers()
	do_actions()
end

function _draw()
	cls()
	palt();
	--draw ground
	rectfill(cam_x,cam_y,cam_x+128,cam_y+128,12)
	
	--draw actors
	foreach(actor,draw_actor)
	
	--draw trees
	palt(12)
	camera_follow(player)
	map(0,0,0,0,128,128)
	
	draw_bars()
	
	
	--debug
	print(dbg,cam_x,cam_y+120,15)
	
	
end







-->8
--player

function make_player(x,y)
	pl=make_actor(1,x,y)
	pl.ani["⬇️"]={{1,false,0},{3,false,1},{1,false,0},{3,true,1}}
	pl.ani["⬆️"]={{16,false,0},{18,false,1},{16,false,0},{18,true,1}}
	pl.ani["➡️"]={{5,false,0},{6,false,1},{5,false,0},{20,false,1}}
	--pl.ani["l"]={{4,true},{6,true},{4,true},{8,true}}
	pl.s_w=2
	pl.s_h=1
	pl.face=1
	pl.default_face=1
	pl.n_apple=0
	pl.n_strawberry=0
	return pl
end


---------------
-- player movement
---------------


function move_player(a)
	--player move logic
	a.dx=0
	a.dy=0
	if btn(⬆️) then
		a.dy=-1
	end
	if btn(⬇️) then
		a.dy=1
	end
	if btn(➡️) then
		a.dx=1
	end
	if btn(⬅️) then
		a.dx=-1
	end
	--player change face
	--test
	if btnp(❎) then
	 if player.n_apple>0 then
	  make_apple(player.x,player.y+8)
	  player.n_apple-=1
	 end
	end
	----
	--player collision
 
 --check collisions with every other actor
 foreach(actor,p_collisions)
end

------------------
--- player collisions
------------------

function p_collisions(a)
 if player==a then return end
 -- write if collision detection
 if player.x+2>a.x and player.x-2<a.x+a.s_w*8 and player.y+2>a.y and player.y-2<a.y+a.s_h*8 then
  if a.kind==2 then --bat
  	if player.is_damageable then
  	 change_face(2)
  	 hit(player,5)
  	end
  end
  if a.kind==3 then --wolf
  	if player.is_damageable then
  	 change_face(2)
  	 hit(player,20)
  	end
  end
  if a.kind==10 then --apple
   change_face(5)
   pickup_apple(a)
  end
 else
 -- player.face=player.default_face
 end
end


-------
-- player hit

function hit(a,hit_score)
	a.life-=hit_score
	dbg=a.life
	if a.life<0 then
	 if a.kind==1 then
	  --game_over
	  reset()
	  _init()
	  player.life=100
	  player.x=1
	  player.y=1
	  return
	 else
	  del(actor,a)
	 end
	end
	
	if a==player then
	 blink(a)
	 a.is_damageable=false
	end
	
end

------------------
--- player draw
------------------


function draw_player(a)
	local b_s=1--body sprite
	a.s_w=2
	local flipx=false
	local y_offset=0
	if a.dx~=0 or a.dy ~=0 then
		if a.dy>0 then
			b_s,flipx,y_offset=cycle_ani(a.ani["⬇️"],a.ani_speed)
			a.s_w=2
		elseif a.dy<0 then
	 	--up
	  b_s,flipx,y_offset=cycle_ani(a.ani["⬆️"],a.ani_speed)
		 a.s_w=2
		elseif a.dx>0 then
		 --right
		 b_s,flipx,y_offset=cycle_ani(a.ani["➡️"],a.ani_speed)
		 a.s_w=1
		elseif a.dx<0 then
		 --left
		 b_s,_,y_offset=cycle_ani(a.ani["➡️"],a.ani_speed)
		 a.s_w=1
		 flipx=true
		end
	else
		--stop
	end
	--print body
	if a.visible then
	 spr(b_s,a.x-a.s_w*4,a.y,a.s_w,a.s_h,flipx,false)
	 draw_pl_head(a,y_offset)
	end
end

function draw_pl_head(a,y_offset)
	--faces:a.face
	--1:scared
	--2:more scared
	--3:hurt
	--4:sad
	--5:suprised
	--6:in love
	local _head_back=21
	local _exp_s={32,33,34,35,36,37,38}
	local _current_head_s=_exp_s[a.face]
	local _head_flip=false
	if a.dy<0 then
		_current_head_s=_head_back
	elseif a.dx>0 then
		_current_head_s+=16
	elseif a.dx<0 then
		_current_head_s+=16
		_head_flip=true
	end
	
	if a.visible then
	 spr(_current_head_s,a.x-4,a.y-a.s_h*8+y_offset,1,1,_head_flip,false)
 end
end


		
 

-->8
--tools

--------
--camera
function camera_follow(a)
	local padding=52
	local window_w=screen_w-padding*2
	local window_h=screen_h-padding*2

	if a.x-(cam_x+(window_w))>padding then
 	cam_x=a.x-padding-window_w--push right
	elseif a.x-cam_x<padding then
		cam_x=a.x-padding--push left
	end
	 
	cam_y=a.y-64--follow camera

	camera(cam_x,cam_y)
end

------
--bars

function draw_bars()
 health_bar()
 pickups_bar()
end

function health_bar()
 rect(cam_x+2,cam_y+2,cam_x+40,cam_y+4,15)
 rectfill(cam_x+3,cam_y+3,cam_x+39*player.life/100,cam_y+3,8)
end

function pickups_bar()
 palt(0,true)
 sspr(120,24,8,8,cam_x+3,cam_y+8,5,5)
 print(player.n_apple,cam_x+10,cam_y+8,15)
end


------
-- test if a point is solid

function solid (x, y)

 if x<0 or y<0  then
		return true end
				
	val = mget(flr(x/8), flr(y/8))
	return fget(val, 0)
end

---------
--generic object creation

function make_actor(k,x,y,s)
	local a={}
	--1:player
	--2:bat
	--3:wolf
	--10:apple
	--11:strawberry
	--12:log
	a.kind=k
	a.ani={}
	a.x=x a.y=y
	a.ox=x a.oy=y
	a.s=s
	a.s_w=1
	a.s_h=1
	a.s_dir="⬇️"
	a.ani_speed=0.25
	a.ani_rest_loop=false
	a.dx=0 a.dy=0
	a.speed=1
	a.thru_solid=false
	a.visible=true
	a.life=100
	a.is_damageable=true
	a.state_changed=false
	add(actor,a)
	return a
end

-----------
-- generic movement
function move_actor(a)
	if a.kind==1 then
		move_player(a)
	end
	if a.kind==2 then
	 move_bat(a)
	end
	if a.kind==3 then
	 move_wolf(a)
	end
		
	--dont move if where
	 --you want to go is solid
 	local _next_x=a.dx*a.speed+a.x
 	local _next_y=a.dy*a.speed+a.y
 	if not solid(_next_x,_next_y) or a.thru_solid then
 	 a.x=_next_x
	  a.y=_next_y
 	end
end

------------------
-- generic draw functions
------------------

function draw_actor(a)
	if a.kind==1 then
		draw_player(a)
	elseif a.kind==2 then
	 draw_monster(a)
	elseif a.kind==3 then
	 draw_monster(a)
	else
	 draw_pickup(a)
	end
end

function cycle_ani(ani,ani_speed) 
	--multi returns
	--1 is sprite
	--2 is flip_x
	--3 is y offset for head bounce walk
	local i=flr(t*ani_speed%#ani)+1
	return ani[i][1],ani[i][2],ani[i][3]
end

function move_spawns(x0,y0)
 -- spawn stuff close to x0,y0
 x0=flr(x0/8)
 yo=flr(y0/8)

 for y=y0-12,y0+12 do
  for x=x0-12,x0+12 do
   val = mget(x,y)

   if val==63 then
    make_apple(x*8,y*8)
    mset(x,y,0)
   end
   
   if val==14 then
    make_wolf(x*8,y*8)
    mset(x,y,0)
   end
   
   if val==12 then
    make_bat(x*8,y*8)
    mset(x,y,0)
   end
   
  end
 end

end

function get_actor_n(a)
 for x=1,#actor do
  if actor[x]==a then
   return x
  end
 end
 return -1
end

-----
--sprite effects

function blink(a)
timer_name=get_actor_n(a).."blink"
  add_timer(timer_name,3,
  function(dt,elapsed,length)
  -- if flr(elapsed)%2==0 then
    a.visible = not a.visible
  -- end
  -- a.visible = false
  end,
  function()
   a.visible= true
   a.is_damageable=true
   del(timers,timer_name)
  end
  )
end

function change_face(face)
 --if timers["face"] == nil then
  add_timer("face",2,
  function() player.face=face end,
  function() 
   player.face=pl.default_face
   del(timers,"face")
   end)
 --else
 -- restart_timer("face")
 --end
end

-->8
--monsters

----------
--bat

function make_bat(x,y)
	local a=make_actor(2,x,y)
	a.ani = monster_ani_ssheet(2)
	a.ani_rest_loop=true
	a.speed=0.7
	a.palt=15
	a.thru_solid=true
end

function move_bat(a)
 wave(a,0.5,0.3,-10)
 if is_close(a,player,42,false) then
	 follow(a,player,1,30)
	 a.state_changed=true
	else
	 if a.state_changed==true then
	  reset_origin_pos(a)
	 end
	 a.state_changed=false
	end
end


------------
--wolf

function make_wolf(x,y)
 local a=make_actor(3,x,y)
	a.ani = monster_ani_ssheet(3)
	--a.ani_rest_loop=false
	a.speed=0.3
	a.palt=15
	a.ani_speed=0.1
	a.thru_solid=false
end

function move_wolf(a)

 if is_close(a,player,32) then
  a.state_changed=true
  follow(a,player,3.5,15)
 else
  if a.state_changed==true then
   a.state_changed=false
   
   reset_origin_pos(a)
  end
  stop_and_patrol(a)
 end
end

function stop_and_patrol(a)
  local c = cocreate(function()
    for i=1,30 do
     yield()
    end
    patrol(a,10)
  end)
 add(actions,c)
end

-----------
--generic monster functions

function is_close(a,obj,radius,only_front)
	local abs_x_diff=abs(obj.x-a.x)
	local abs_y_diff=abs(obj.y-a.y)
	if abs_x_diff<radius and abs_y_diff<radius then
	 return true
	end
	 return false
end

function follow(a,obj,speed_gain,dir_update_freq)
 --obj: object to follow
 --radius:the radius within which it triggers the following
 --dir_update_freq: direction updates every x ticks 
 --speed_gain: how much faster or slower it goes when triggered. 1=normal speed
	local x_diff=obj.x-a.x
	local y_diff=obj.y-a.y
	local abs_x_diff=abs(x_diff)
	local abs_y_diff=abs(y_diff)
	 if t%dir_update_freq==0 then -- makes it change direction every second not more
	  local magnitude=sqrt(abs_x_diff*abs_x_diff+abs_y_diff*abs_y_diff)
	  a.dx=(x_diff/magnitude)*speed_gain
	  a.dy=(y_diff/magnitude)*speed_gain
	 end
end

function patrol(a,dist)
 --imprint direction
 move_to_sprite_dir(a)
 --wave(a,1,-1,0.98)

 --change direction
 if abs(a.x-a.ox)>dist or abs(a.y-a.oy)>dist or solid(a.x+a.dx*4,a.y+a.dy*4) then
  a.dx= -a.dx
  a.dy= -a.dy
 end
end

function reset_origin_pos(a)
	--reset starting point to current point
		 a.ox=a.x
		 a.oy=a.y
		 a.dx=0
		 a.dy=0
end

function move_to_sprite_dir(a)
	a.dx=0
	a.dy=0
 if a.s_dir=="⬇️" then
  a.dy=1
 elseif a.s_dir=="⬆️" then
  a.dy=-1
 elseif a.s_dir=="➡️" then
  a.dx=1
 else
  a.dx=-1
 end
end


function monster_ani_ssheet(k)
	-- returns an ani array based on monster kind
	local b_s=12--top-left sprite of spriteshit
	
	if k==3 then b_s=14 end --wolf
	
	local ani={}
	--{base_sprite,flipx,y_offset}
	ani["⬇️"]={{b_s,false,0},{b_s+1,false,0}}
	ani["➡️"]={{b_s+16,false,0},{b_s+17,false,0}}
 ani["⬅️"]={{b_s+16,true,0},{b_s+17,true,0}}
 ani["⬆️"]={{b_s+32,false,0},{b_s+33,false,0}}
	return ani
end

function wave(a,freq,amp,baseline)
 --move actor's y position 
 --on a sine. baseline is the lower limit
 local off_y=amp*sin(freq*t/30)
 if off_y>baseline then
  a.y+=off_y
 end
end

function draw_monster(a)	
	
	-- this could be used as generic
	-- monster draw
	
	if abs(a.dx)<abs(a.dy) then 
	 if a.dy>0 then 
	  a.s_dir="⬇️" 
	 else
	  a.s_dir="⬆️"
	 end
	else
	 if a.dx>0 then
	  a.s_dir="➡️"
	 elseif a.dx<0 then
	  a.s_dir="⬅️"
	 end
	end
	
	local ani_speed=a.ani_speed		
	if not a.ani_rest_loop and (a.dx==0 and a.dy==0) then 
	 ani_speed=0
	end
	s,flipx,offset_y=cycle_ani(a.ani[a.s_dir],ani_speed) 
	palt(a.palt)
	spr(s,a.x,a.y+offset_y,1,1,flipx,false)
end




-->8
--timers and actions

-- start timers code

timers = {}
last_time = nil

function init_timers ()
  last_time = time()
end

function add_timer (name,
    length, step_fn, end_fn,
    start_paused)
  local timer = {
    length=length,
    elapsed=0,
    active=not start_paused,
    step_fn=step_fn,
    end_fn=end_fn
  }
  -- added condition
--  if timers[name]~=nil then
   timers[name] = timer
--  end
  return timer
end

function update_timers ()
  local t = time()
  local dt = t - last_time
  last_time = t
  for name,timer in pairs(timers) do
    if timer.active then
      timer.elapsed += dt
      local elapsed = timer.elapsed
      local length = timer.length
      if elapsed < length then
        if timer.step_fn then
          timer.step_fn(dt,elapsed,length,timer)
        end  
      else
        if timer.end_fn then
          timer.end_fn(dt,elapsed,length,timer)
        end
        timer.active = false
      end
    end
  end
end

function pause_timer (name)
  local timer = timers[name]
  if (timer) timer.active = false
end

function resume_timer (name)
  local timer = timers[name]
  if (timer) timer.active = true
end

function restart_timer (name, start_paused)
  local timer = timers[name]
  if (not timer) return
  timer.elapsed = 0
  timer.active = not start_paused
end

-- end timers code

-- actions
function do_actions()
  for c in all(actions) do
    if costatus(c) then
      coresume(c)
    else
      del(actions,c)
    end
  end
end
-->8
--pickups

function make_apple(x,y)
 local a = make_actor(10,x,y,63)
 a.palt=0
end

function draw_pickup(a)
 palt()
 palt(a.palt,true)
 spr(a.s,a.x,a.y)
end

function pickup_apple(a)
 del(actor,a)
 player.n_apple+=1
end
__gfx__
00000000b00044444444000b00000000000000004443b440000000000000000000000000000000000000000000000000ff0f0fffffffffffff1ff1ffff1ff1ff
0f0000f004444444444444b0b00044444444000044b23440443b44400000000000000000000000000000000000000000f0000f0fff0f0fffff1111fff181181f
00f00f0030004444444400430444444444444000444b444044b23440000000000000000000000000000000000000000005909050ff000ffff181181f11100111
000ff000000044444444000030004444444404bb44444440444b4440000000000000000000000000000000000000000005000550ff909fff11100111ff1551ff
000ff00000002443b44400000000444444440040044444204444442200000000000000000000000000000000000000000a0005a0f50000ffff1551fffa5555af
00f00f00000024433244000000002423b2440003044442000444422200000000000000000000000000000000000000000ff00afaf000000ffa5555affaf55faf
0f0000f00000244002440000000022433244000000442000004400000000000000000000000000000000000000000000fffa0ffff0a0005ffa5555afffffffff
000000000000244002440000000000000244000000442000004400000000000000000000000000000000000000000000ffffaffffafa0faffaffffafffffffff
b000c444444c00b000000000000000000000000009999990000000000000000000000000000000000000000000000000fff0f0ffffff0fffffff1ffffff1ff11
0b224c4cc4c42223b000c444444c00004444244099999999000000000000000000000000000000000000000000000000ff0a000ffffc00ffffff11ffffff1811
300044cffc4400330b224c4cc4c420004444244049999994000000000000000000000000000000000000000000000000f055a090ffca090fffff1811fff1111f
00004c6666c40000300044cffc44020044432b0044444444000000000000000000000000000000000000000000000000055a5000ffcaa00ffff11111ff5511ff
00002c6666c4000000004c6666c4002b4444b3444444444400000000000000000000000000000000000000000000000005a5500fffcca0fff55511fff5555fff
00002cccccc4000000002c6666c4033b04444444444444440000000000000000000000000000000000000000000000000a5a000fffccaaff555555ff5555afff
000024400244000000002cccccc400b00022000044444444000000000000000000000000000000000000000000000000afa0a00ffffcca5fa555afffa5fffaff
000024400244000000002440024400000022000044444444000000000000000000000000000000000000000000000000fffff0ffffff0fffafffafffafffffff
099999900999999009999990099999900999999009999990099999900999999000000000000000000000000000000000fff0f0ffffffffffff1ff1ffff1ff1ff
995995999959959999999999999999999999999999999999999999999999999900000000000000000000000000000000f5f0005ffff0f0ffff1111fff111111f
459999544599995445599554455995544898989849599594495995944999999400000000000000000000000000000000a0000000fff000fff111111f11111111
44f44f4444f44f4444555544445555444888488845f44f5445f44f5444f44f440000000000000000000000000000000000000000ff50005f11155111ff1551ff
44f44f4444f44f4444f44f4444f44f444484448444f44f4444f44f4444f44f44000000000000000000000000000000000a0000a0ff00000fff5555ffff55a5ff
44444444444ee44444444444444444444444444444444444444444444444444400000000000000000000000000000000afc00ff0ff00000ffa55a5affa5a55af
444ee444444ee444444ee444444ee444444ee444444ee444444ee4444444e44400000000000000000000000000000000fff0affffff0055ffa5a55affaffffaf
444ee444444ee444444ee44444444444444ee44444eeee4444e44e444444e44400000000000000000000000000000000fffafffffff0affffaffffafffffffff
099999000999990009999900099999000999990009999900099999000999990000000000000000000000000000000000000000000b000240000b000000002000
999999909999999099999990999999909999999099999990999999909999999000000000000000000000000000000000000000000b3024240bb3333000023300
4999954049999540499995404999954049999848499995404999954049999540000000000000000000000000000000000023000000444242004b330000020000
44445f4044445f4044444450444444504444488844445f4044445f4044445f400000000000000000000000000000000000020000002424220884b44000888800
44444f4044444f4044444f4044444f404444448044444f4044444f4044444f400000000000000000000000000000000000009800044242200888444008f88880
44444440444444e04444444044444440444444404444444044444440444444400000000000000000000000000000000008f988204ff422000088840008f88840
444444e0444444e0444444e0444444e0444444e0444444e0444444e0444444e000000000000000000000000000000000088884204ff420000088440008888840
444444e0444444e0444444e044444440444444e044444ee044444e40444444e00000000000000000000000000000000000822200044200000008400000888400
ccc0cc0cc0ccc0cc00c0ccccc0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
cc030c30030c030c33030cccc0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
cc03603306000360300600ccc0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
c0006006600300606060030cc0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
03600000000030000000660cc0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
c006060000600000036000ccc0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
030003606000003006000330c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
03360000600006600000630cc0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
cc000000000000006600600cc0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
c06600360060000000000630c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
03300006000006000060000cc0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
c000300000000000000030ccc0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
cc030000060000000003000cc0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
c00006000000006060000330c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
03600000000000006300660cc0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
c006006600060000000000ccc0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
c03600000660000600006330c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
033000600300000606300030c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
cc000630000006000060600cc0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
c06600000003000000000630c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
c3300606060030066006000cc0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
c030600306300060330630ccc0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
ccc03033c030c03003c033ccc0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
cccc0c00cc0ccc0cc0cc0cccc0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__gff__
0000000000000001010100000202020200000000000000010101000002020202000000000000000001010000020202020000000000000000000000000404040401010100000000000000000000000000010101000000000000000000000000000101010000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000004041414200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0040414141414142000e00000000005051515200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0050515151515152000000000000005051515200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0050515151515151414141410000005051515141414142000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0060616151515151515151520000005051515151515152000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000050515151515151520000005051515151515152000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000050515151515151520000005051515151515152000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000060616161616161620000005051515151515152000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000c00000000000000005051516161616162000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000006061620000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000003f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0040414141414141414200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0050515151515151515200000000000000004041414141414200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
005051515151515151520040414200000e005051515151515200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0050515151515151515200505152000000005051515151515200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0060616161616161616200606162000000005051515151515200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000005051515151515200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000005051515151515200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000404141415151515151515200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000505151515151515151515200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000505151515151515151515200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000505151515151515151515200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000606161616161616161626200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
